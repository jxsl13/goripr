on:
  push:
    branches: [ "main", "master" ]
    paths:
      - '**.go'
      - '**.yaml'
      - '**.yml'
      - '**.json'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "master" ]
    paths:
      - '**.go'
      - '**.yaml'
      - '**.yml'
      - '**.json'
      - 'go.mod'
      - 'go.sum'

name: unit tests
jobs:
  test:
    strategy:
      matrix:
        go-version: ['stable', 'oldstable']
        platform: [ubuntu-latest]
        redis: [6,7]
    runs-on: ${{ matrix.platform }}
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
     
    - name: Vet
      run: go vet ./...

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
    
    - name: Run govulncheck
      run: govulncheck ./...

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        # we let the report trigger content trigger a failure using the GitHub Security features.
        args: '-no-fail -fmt sarif -out results.sarif ./...'
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: results.sarif

    - name: Start Redis
      uses: supercharge/redis-github-action@1.8.0
      with:
        redis-version: ${{ matrix.redis-version }}

    - name: Code Coverage
      run: go test -timeout 1800s -race -count=1 -covermode=atomic -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.out
        fail_ci_if_error: false
        verbose: false
